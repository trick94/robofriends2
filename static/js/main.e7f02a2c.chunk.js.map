{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.jsx","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","useState","setRobots","setSearchField","count","setCount","useEffect","fetch","then","response","json","users","console","log","filteredRobots","filter","robot","toLowerCase","includes","length","onClick","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAeeA,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrB,OACI,sBAAKC,UAAU,kDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,eACrB,gCACI,6BAAKC,IACL,4BAAIC,WCcLI,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIV,GAAIO,EAAOG,GAAGV,GACdC,KAAQM,EAAOG,GAAGT,KAClBC,MAAOK,EAAOG,GAAGR,OAHZQ,SCKlBC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC/B,OACE,qBAAKV,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCHI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,SAA1C,SACKH,EAAMI,Y,oCCkBJC,E,kDApBX,WAAYL,GAAQ,IAAD,8BACf,cAAMA,IACDM,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,2DAGJG,KAAKV,MAAMI,a,GAjBCQ,aC2CZC,MAtCf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACLzB,EADK,KACG0B,EADH,OAE2BD,mBAAS,IAFpC,mBAELpB,EAFK,KAEQsB,EAFR,OAGaF,mBAAS,GAHtB,mBAGNG,EAHM,KAGCC,EAHD,KAKbC,qBAAU,WACNC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAIT,EAAUS,MACzBC,QAAQC,IAAIT,KACf,CAACA,IAEJ,IAIMU,EAAiBtC,EAAOuC,QAAO,SAAAC,GACnC,OAAOA,EAAM9C,KAAK+C,cAAcC,SAASrC,EAAYoC,kBAGvD,OAAKzC,EAAO2C,OAIR,sBAAK/C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,wBAAQgD,QAAS,kBAAIf,EAASD,EAAQ,IAAtC,mBACA,cAAC,EAAD,CAAWtB,aAfM,SAACuC,GACtBlB,EAAekB,EAAMC,OAAOC,UAexB,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU/C,OAAQsC,WATnB,0CChBIU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,8BACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e7f02a2c.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({id, name, email}) => {\n    return (\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow shadow-5 tc\">\n            <img alt='robots' src={`https://robohash.org/${id}?set=set3`}/>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    return (\n        <div>\n            {\n                robots.map((user, i) => {\n                    return (\n                        <Card\n                            key={i}\n                            id={robots[i].id}\n                            name = {robots[i].name}\n                            email={robots[i].email\n                        }/>\n                    );\n                })\n            }\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchField, searchChange}) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className='pa3 ba b--green bg-lightest-blue'\n        type='search'\n        placeholder='search robots'\n        onChange={searchChange}\n      />\n    </div>\n  )\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', height: '800px'}}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({hasError: true });\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>Ooooops. That is not good</h1>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundry;","import React, { useState, useEffect } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\nfunction App() {\n  const [ robots, setRobots ] = useState([]);\n  const [ searchField, setSearchField ] = useState('');\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n      fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => setRobots(users));\n        console.log(count);\n  }, [count])\n\n  const onSearchChange = (event) => {\n    setSearchField(event.target.value);\n  }\n\n  const filteredRobots = robots.filter(robot => {\n    return robot.name.toLowerCase().includes(searchField.toLowerCase());\n  });\n\n  if (!robots.length) {\n    return <h1>Loading</h1>\n  } else {\n    return (\n      <div className=\"tc\">\n        <h1 className=\"f1\">RoboFriends</h1>\n        <button onClick={()=>setCount(count + 1)}>Click</button>\n        <SearchBox searchChange={onSearchChange}/>\n        <Scroll>\n          <ErrorBoundry>\n            <CardList robots={filteredRobots}/>\n          </ErrorBoundry>\n        </Scroll>\n      </div>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <div>\n    <React.StrictMode>\n      <App/>\n    </React.StrictMode>\n  </div>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}